@model ShopManagment.Models.History

@{
    ViewBag.Title = "Index";
    double totalPrice = 0;
    int totalQuantity = 0;
}

<h2>გაყიდვების ისტორია</h2>


@using (Html.BeginForm("Index", "ShopHistoryManag"))
{
    @Html.ValidationSummary(true)
    @Html.LabelFor(model => model.FromDate)
    @Html.EditorFor(model => model.FromDate)
    @Html.ValidationMessageFor(model => model.FromDate)
    @Html.LabelFor(model => model.ToDate)
    @Html.EditorFor(model => model.ToDate)
    @Html.ValidationMessageFor(model => model.ToDate)

    <div class="editor-label">
          @Html.LabelFor(model => model.AdminID, "Shop Operator")
    </div>
    <div class="editor-field">
          @Html.DropDownList("AdminID", "--Yvela--")
    </div>
    
    <input type="submit" value="ძებნა" />
}




<div class="datagrid">
    <table class="cxrili">
        <thead>
            <tr>
                <th>კატეგორია
                </th>
                <th>ტიპი
                </th>
                <th>საწყობი
                </th>
                <th>თარიღი
                </th>
                <th>ფასი
                </th>
                <th>რაოდენობა
                </th>
                <th>ჯამური ფასი
                </th>
                <th>დაბრუნებული
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.sale)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Storage.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                        @{if (item.Returned != true)
                          {
                              totalQuantity += item.Quantity;
                          }}
                    </td>
                    <td>
                        @(item.Quantity * item.Price)
                        @{if (item.Returned != true)
                          {
                              totalPrice += item.Quantity * item.Price;
                          }}
                    </td>
                    <td>
                        @{
                          if (item.Returned == true)
                          {
                            @("X")
                          }
                        }
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>
<h4>ამ შუალედის გაყიდვები (ფასი/რაოდენობა): @totalPrice / @totalQuantity
</h4>

<script type="text/javascript">
    $(document).ready(function () {
        var curDate = $.datepicker.formatDate('mm/dd/yy', new Date());
        $("#FromDate").datepicker({
            dateFormat: "yy-mm-dd"
        });
        $("#ToDate").datepicker({
            dateFormat: "yy-mm-dd"
        });
    });
</script>