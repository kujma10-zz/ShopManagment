@model ShopManagment.Sale

@{
    ViewBag.Title = "Create";
}

<h2>გაყიდვის ფორმა</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Sale</legend>

        <div class="editor-label">
            კატეგორია
        </div>
        <div class="editor-field">
            @Html.DropDownList(
                "CatID", 
                (IEnumerable<SelectListItem>)ViewData["Menu"], 
                new { 
                    @class = "list",
                    id = "spinner1",
                    data_url = Url.Action("GetListValue", "ShopSales") 
                }
            )
            @Html.ValidationMessageFor(model => model.CatID)
        </div>

        <div class="editor-label">
            პროდუქტის ტიპი
        </div>
        <div class="editor-field">
            @Html.DropDownList(
                "ProductID", 
                (IEnumerable<SelectListItem>)ViewData["Menu"], 
                new { 
                    @class = "list",
                    id = "spinner2",
                    data_url = Url.Action("GetListValue", "ShopSales") 
                }
            )
            @Html.ValidationMessageFor(model => model.ProductID)
        </div>

        <div class="editor-label">
            საწყობი
        </div>
        <div class="editor-field">
            @Html.DropDownList(
                "StorageID", 
                (IEnumerable<SelectListItem>)ViewData["Menu"], 
                new { 
                    @class = "list",
                    id = "spinner3",
                    data_url = Url.Action("GetListValue", "ShopSales") 
                }
            )
            @Html.ValidationMessageFor(model => model.StorageID)
        </div>

        <div class="editor-label">
            ერთეულის ფასი
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Price, new { @readonly = true, id = "tb1" }) 
        </div>

        <div class="editor-label">
            საწყობში რაოდენობა
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Quantity, new { @readonly = true, id = "tb2" }) 
        </div>

        <div class="editor-label">
            გასაყიდი რაოდენობა
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity)
        </div>

        <div class="editor-label">
            ჯამური ფასი
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Price, new { @readonly = true, id = "tb3"  }) 
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    function clearFields() {
        document.getElementById('Quantity').value = '';
        document.getElementById('tb3').value = '';
    }

    $(function() {
        $('.list').change(function () {
            clearFields();
            var spinner1Val = $('#spinner1').val();
            var spinner2Val = $('#spinner2').val();
            var spinner3Val = $('#spinner3').val();
            $.ajax({
                url: $(this).data('url'),
                type: 'GET',
                cache: false,
                data: { category: spinner1Val, product: spinner2Val, storage: spinner3Val },
                success: function (result) {
                    $('#tb1').val(result.price);
                    $('#tb2').val(result.quantity);
                }
            });
        });
    });

    $('#Quantity').change(function () {
        var minVal = 1;
        var maxVal = $('#tb2').val();
        var thisVal = $(this).val();

        maxVal = maxVal=='' ? 0 : maxVal;
        if (parseInt(thisVal) > parseInt(maxVal)) {
            $(this).val(maxVal);
        }
        if (parseInt(thisVal) < parseInt(minVal)) {
            $(this).val(minVal);
        }

        var price = parseFloat($(this).val()) * parseFloat($('#tb1').val());
        $('#tb3').val(price);
    });
</script>